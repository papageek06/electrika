{% extends 'base.html.twig' %}

{% block title %}EventDetail index{% endblock %}

{% block body %}
    <h1>EventDetail index</h1>

        	<form class="d-flex ms-3 position-relative" action="{{path('app_search')}}">
				<input class="form-control me-2" autocomplete="off" id="article-search" type="text" placeholder="Rechercher" aria-label="Search" name="value">
                <select>
                    <option name='search' value="ASC">ordre croissant</option>
                </select>
                    

				<button class="btn btn-outline-primary" type="submit">üîç</button>

				<!-- Liste des suggestions -->
				<ul id="suggestions-list" class="list-group position-absolute mt-2 shadow d-none"></ul>
			</form>

    <table class="table">
        <thead>
            <tr>
                <th>evenment</th>
                <th>Mouve</th>
                <th>preparateur</th>
                <th>Quantity</th>
                <th>Date</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody>
        {% for event_detail in event_details %}
            <tr>
                <td>{{ event_detail.event ? event_detail.event.name : 'N/A'  }}</td>
                <td>{{ event_detail.mouve }}</td>
                <td>{{ event_detail.user ? event_detail.user.firstName : 'N/A' }}</td>
                <td>{{ event_detail.quantity }}</td>
                <td>{{ event_detail.date ? event_detail.date|date('Y-m-d') : '' }}</td>
                <td>
                    <a href="{{ path('app_event_detail_show', {'id': event_detail.id}) }}">show</a>
                    <a href="{{ path('app_event_detail_edit', {'id': event_detail.id}) }}">edit</a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="5">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <a href="{{ path('app_event_detail_new') }}">Create new</a>

         <script>

	document.addEventListener("DOMContentLoaded", function () { // quand la page est enti√®rrement charg√©e
		const searchInput = document.getElementById("article-search"); // je r√©cup√®re la balise qui a l'id article-search
		const suggestionsList = document.getElementById("suggestions-list");
		// je r√©cup√®re la balise qui a l'id article-list

		// j'utilise ici async et await (ES6)
		// await attends la r√©ponse du serveur
		// et pour fonctoonner la fonction doit √™tre async

		searchInput.addEventListener("input", async function () { // j'√©coute l'√©venement o√π je tape un truc dans mon champ search
		const query = this.value.trim(); // je r√©cup√®re la valeur √† l'int√©rieur sans espace blancs
		if (query.length < 2) 
			return;
		// √âviter les requ√™tes inutiles si moins de 2 caract√®res

		try { // j'essaie de contacter le serveur en asynchrnoe avec l'api fetch
			const response = await fetch(`/search/suggestions?search=${encodeURIComponent(query)}`);
			const suggestions = await response.json(); // je traite la r√©ponse sous forme d'objet json

			// Nettoyer le datalist
			suggestionsList.innerHTML = "";
			// je vide ma datalist

			// Ajouter les suggestions
            suggestions.forEach(article => {
                const li = document.createElement("li");
                li.classList.add("list-group-item", "list-group-item-action");
                li.textContent = article.title;
                li.addEventListener("click", function() {
                    searchInput.value = article.title;
                    suggestionsList.classList.add("d-none");
                });
                suggestionsList.appendChild(li);
            });

            suggestionsList.classList.remove("d-none");

			setTimeout(() => {
				searchInput.focus(); // Force l'affichage des suggestions
			}, 100);
		} catch (error) { // si j'ai une erreur je l'affiche en console
			console.error("Erreur lors du chargement des suggestions :", error);
		}
		});

		// Cacher la liste si on clique en dehors
		document.addEventListener("click", function(event) {
			if (!searchInput.contains(event.target) && !suggestionsList.contains(event.target)) {
				suggestionsList.classList.add("d-none");
			}
		});
	});
</script>
{% endblock %}
