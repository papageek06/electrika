{% extends 'base.html.twig' %}

{% block title %}Liste des Produits
{% endblock %}

{% block body %}
	<style></style>


	<div class="m-1 ">
		{# Affichage du titre de la page #}">
		<h2 class="text-center mt-5">Liste des Produits</h2>

		{# Message d'alerte selon le statut du panier #}
		<div class="alert alert-warning text-center">
			{% if cart_session is empty %}
				Sélectionnez votre événement
			{% else %}
				Validez votre préparation avant de changer d'événement
			{% endif %}
		</div>


		<div class=" mb-4">
			<div
				class="d-flex flex-wrap gap-2 justify-content-center align-items-center ">
				<!-- Select Event -->
				<select id="eventSelect" name="event_id" class="form-select" style="max-width: 250px;">
					<option value="">Sélectionnez un événement</option>
					{% for event in events %}
						<option value="{{ event.id }}" {% if cart_session is defined and cart_session["eventId"] is defined and event.id in cart_session["eventId"] %} selected {% endif %}>
							{{ event.name }}
						</option>
					{% endfor %}
				</select>

				<!-- Select Category -->
				<select id="categorySelect" name="category" class="form-select" style="max-width: 250px;">
					<option value="">Search by category</option>
					{% for category in categorys %}
						<option value="{{ category.id }}">{{ category.name }}</option>
					{% endfor %}
				</select>

				<!-- Input Search -->
				<input type="text" id="searchInput" class="form-control" placeholder="Recherche de produit..." style="max-width: 250px;">
			</div>
		</div>

		<div class="text-center m-3">
			<a href="{{ path('app_product_new') }}" class="btn btn-success">Créer un nouveau produit</a>
		</div>
		{# ----------------------------------------------tableau product------------------------------------------- #}

		<div class="MyDiv m-0 m-sm-2 w-100 overflow-auto">
			{# Affichage du message "Aucun produit trouvé" si aucun produit n'est disponible #}
			{% if products is empty %}
				<div class="alert alert-info text-center" id="no-results">
					Aucun produit trouvé
				</div>
			{% else %}
				<div class="alert alert-info text-center d-none" id="no-results">
					Aucun produit trouvé
				</div>
			{% endif %}

			{# Tableau des produits #}
			<table role="table" class="">
				<caption class="visually-hidden">Tableau des produits disponibles</caption>

				<thead>
					<tr>
						<th class="MyCell d-none d-md-table-cell">image</th>
						<th class="MyCell">Nom</th>
						<th class="MyCell d-none d-md-table-cell">Catégorie</th>
						<th class="MyCell">Stock Initial</th>
						{% for i in 0..6 %}
							<th class="MyCell d-none d-md-table-cell  ">Week +{{ i }}</th>
						{% endfor %}
						<th class="MyCell">quantity</th>
						<th class="MyCell">Actions</th>
						<th class="MyCell">panier</th>
						


					</tr>
				</thead>
				<tbody>
					{% for productList in products %}
						<tr
							class="product-item" data-category="{{ productList.category.id }}" data-name="{{ productList.name|lower }}">
							{# Image produit #}
							<form method="post" action="{{ path('app_cart_add') }}" data-turbo="false">
								<td class="CellStart d-none d-md-table-cell">
									<img width="70px" loading="lazy" src="{{ asset('uploads/pictures/' ~ (productList.picture ?? 'default.png')) }}" alt="{{ productList.name }}">
								</td>

								<td class="MyCell" id="{{ productList.name }}">{{ productList.name }}</td>
								<td class="MyCell d-none d-md-table-cell">{{ productList.category ? productList.category.name : "N/A" }}</td>
								<td class="MyCell">{{ productList.stockInitial }}</td>

								{# Affichage du stock par semaine #}
								{% for semaine in stockSemaines[productList.id] %}
									<td class="MyCell d-none d-md-table-cell {{ semaine.stock|number_format and semaine.stock|number_format < 0 ? 'text-danger text-white' : '' }}">
										{{ semaine.stock }}
									</td>
								{% endfor %}

								<td class="category-{{ productList.category.id }}" style="display:none;"></td>


								<td class="MyCell"><input class="col-4" type="number" name="quantity" value="1"></td>
								<td class="MyCell col-1 ">
									<a href="{{ path('app_product_show', {'id': productList.id}) }}" class="btn btn-primary col-9 m-1" aria-label="Voirle detail de {{ productList.name }}">Détails</a>
									<input type="hidden" name="product_id" value="{{ productList.id }}">
									<input type="hidden" name="user" value="{{ app.user.id }}">
									<input type="hidden" name="event_id" id="eventIdInput" value="{{ cart_session['eventId'][0] ?? '' }}">
									<button class="btn btn-warning mt-1  col-9 m-1" aria-label="Ajouter {{ productList.name }} au panier" type="submit">add</button>
								</td>
							</form>

							<td class="cellEnd">
								{% if cart_session is defined and cart_session["idProduct"] is defined %}
									{% for key, id in cart_session.idProduct %}
										{% if productList.id == id %}
											{{ cart_session.quantity[key] }}
										{% endif %}
									{% endfor %}
								{% endif %}
							</td>
						</tr>

					{% else %}
						<tr>
							<td class="p-3" colspan="14">Aucun produit trouvé</td>
						</tr>
					{% endfor %}

				</tbody>

			</table>
		</div>
	</div>
	<script>
		// ----------JavaScript to handle the event selection and update the hidden input field----------
document.addEventListener("DOMContentLoaded", function () {
let eventSelect = document.getElementById("eventSelect");
let eventIdInputList = document.querySelectorAll("input[name='event_id']");

function updateEventIdInputs() {
let selectedEventId = eventSelect.value;
eventIdInputList.forEach(input => {
input.value = selectedEventId;
});
}

updateEventIdInputs();
eventSelect.addEventListener("change", updateEventIdInputs);
});

// ----------JavaScript to handle the category selection and filter the products ----------

document.addEventListener("DOMContentLoaded", function () {
let categorySelect = document.getElementById("categorySelect");
let productRows = document.querySelectorAll("tbody tr");

function filterProducts() {
let selectedCategoryId = categorySelect.value;
productRows.forEach(row => {
let categoryCell = row.querySelector("td.category-" + selectedCategoryId);
if (selectedCategoryId === "" || categoryCell) {
row.style.display = "";
} else {
row.style.display = "none";
}
});
}

categorySelect.addEventListener("change", filterProducts);
filterProducts();
});

document.addEventListener('DOMContentLoaded', function () {
const searchInput = document.getElementById('searchInput');
const categorySelect = document.getElementById('categorySelect');
const productRows = document.querySelectorAll('.product-item');
const eventSelect = document.getElementById('eventSelect');

function filterProducts() {
const searchTerm = searchInput.value.toLowerCase();
const selectedCategory = categorySelect.value;

productRows.forEach(function (row) {
const name = row.dataset.name; // data-name
const categoryId = row.dataset.category; // data-category

const matchesSearch = name.includes(searchTerm);
const matchesCategory = ! selectedCategory || categoryId === selectedCategory;

row.style.display = matchesSearch && matchesCategory ? '' : 'none';
});
}

// Lancer le filtre à chaque modification
searchInput.addEventListener('input', filterProducts);
categorySelect.addEventListener('change', filterProducts);

// Mettre à jour le champ caché event_id dans les formulaires
eventSelect.addEventListener('change', function () {
const selectedEventId = this.value;
document.querySelectorAll('input#selectedEventInput').forEach(input => {
input.value = selectedEventId;
});
});
});

// ----------JavaScript to handle the no results message ----------
const noResults = document.getElementById('no-results');
noResults.style.display = foundMatch ? 'none' : 'block';
	</script>
{% endblock %}
